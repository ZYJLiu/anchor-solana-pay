"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/checkout";
exports.ids = ["pages/api/checkout"];
exports.modules = {

/***/ "@project-serum/anchor":
/*!****************************************!*\
  !*** external "@project-serum/anchor" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@project-serum/anchor");

/***/ }),

/***/ "@solana/web3.js":
/*!**********************************!*\
  !*** external "@solana/web3.js" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@solana/web3.js");

/***/ }),

/***/ "@metaplex-foundation/js":
/*!******************************************!*\
  !*** external "@metaplex-foundation/js" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("@metaplex-foundation/js");;

/***/ }),

/***/ "@solana/spl-token":
/*!************************************!*\
  !*** external "@solana/spl-token" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@solana/spl-token");;

/***/ }),

/***/ "(api)/./idl/program_idl.ts":
/*!****************************!*\
  !*** ./idl/program_idl.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IDL\": () => (/* binding */ IDL)\n/* harmony export */ });\nconst IDL = {\n    \"version\": \"0.1.0\",\n    \"name\": \"nft\",\n    \"instructions\": [\n        {\n            \"name\": \"initialize\",\n            \"accounts\": [\n                {\n                    \"name\": \"mint\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"metadata\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"masterEdition\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"auth\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenAccount\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"user\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"payer\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenMetadataProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"uri\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"symbol\",\n                    \"type\": \"string\"\n                }\n            ]\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9pZGwvcHJvZ3JhbV9pZGwudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQXNGTyxLQUFLLENBQUNBLEdBQUcsR0FBUSxDQUFDO0lBQ3ZCLENBQVMsVUFBRSxDQUFPO0lBQ2xCLENBQU0sT0FBRSxDQUFLO0lBQ2IsQ0FBYyxlQUFFLENBQUM7UUFDZixDQUFDO1lBQ0MsQ0FBTSxPQUFFLENBQVk7WUFDcEIsQ0FBVSxXQUFFLENBQUM7Z0JBQ1gsQ0FBQztvQkFDQyxDQUFNLE9BQUUsQ0FBTTtvQkFDZCxDQUFPLFFBQUUsSUFBSTtvQkFDYixDQUFVLFdBQUUsSUFBSTtnQkFDbEIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFVO29CQUNsQixDQUFPLFFBQUUsSUFBSTtvQkFDYixDQUFVLFdBQUUsS0FBSztnQkFDbkIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFlO29CQUN2QixDQUFPLFFBQUUsSUFBSTtvQkFDYixDQUFVLFdBQUUsS0FBSztnQkFDbkIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFNO29CQUNkLENBQU8sUUFBRSxJQUFJO29CQUNiLENBQVUsV0FBRSxLQUFLO2dCQUNuQixDQUFDO2dCQUNELENBQUM7b0JBQ0MsQ0FBTSxPQUFFLENBQWM7b0JBQ3RCLENBQU8sUUFBRSxJQUFJO29CQUNiLENBQVUsV0FBRSxLQUFLO2dCQUNuQixDQUFDO2dCQUNELENBQUM7b0JBQ0MsQ0FBTSxPQUFFLENBQU07b0JBQ2QsQ0FBTyxRQUFFLEtBQUs7b0JBQ2QsQ0FBVSxXQUFFLEtBQUs7Z0JBQ25CLENBQUM7Z0JBQ0QsQ0FBQztvQkFDQyxDQUFNLE9BQUUsQ0FBTztvQkFDZixDQUFPLFFBQUUsSUFBSTtvQkFDYixDQUFVLFdBQUUsSUFBSTtnQkFDbEIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFjO29CQUN0QixDQUFPLFFBQUUsS0FBSztvQkFDZCxDQUFVLFdBQUUsS0FBSztnQkFDbkIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUF3QjtvQkFDaEMsQ0FBTyxRQUFFLEtBQUs7b0JBQ2QsQ0FBVSxXQUFFLEtBQUs7Z0JBQ25CLENBQUM7Z0JBQ0QsQ0FBQztvQkFDQyxDQUFNLE9BQUUsQ0FBTTtvQkFDZCxDQUFPLFFBQUUsS0FBSztvQkFDZCxDQUFVLFdBQUUsS0FBSztnQkFDbkIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFlO29CQUN2QixDQUFPLFFBQUUsS0FBSztvQkFDZCxDQUFVLFdBQUUsS0FBSztnQkFDbkIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFzQjtvQkFDOUIsQ0FBTyxRQUFFLEtBQUs7b0JBQ2QsQ0FBVSxXQUFFLEtBQUs7Z0JBQ25CLENBQUM7WUFDSCxDQUFDO1lBQ0QsQ0FBTSxPQUFFLENBQUM7Z0JBQ1AsQ0FBQztvQkFDQyxDQUFNLE9BQUUsQ0FBSztvQkFDYixDQUFNLE9BQUUsQ0FBUTtnQkFDbEIsQ0FBQztnQkFDRCxDQUFDO29CQUNDLENBQU0sT0FBRSxDQUFNO29CQUNkLENBQU0sT0FBRSxDQUFRO2dCQUNsQixDQUFDO2dCQUNELENBQUM7b0JBQ0MsQ0FBTSxPQUFFLENBQVE7b0JBQ2hCLENBQU0sT0FBRSxDQUFRO2dCQUNsQixDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy10YWlsd2luZGNzcy10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9pZGwvcHJvZ3JhbV9pZGwudHM/NWVhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBOZnQgPSB7XG4gIFwidmVyc2lvblwiOiBcIjAuMS4wXCIsXG4gIFwibmFtZVwiOiBcIm5mdFwiLFxuICBcImluc3RydWN0aW9uc1wiOiBbXG4gICAge1xuICAgICAgXCJuYW1lXCI6IFwiaW5pdGlhbGl6ZVwiLFxuICAgICAgXCJhY2NvdW50c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJtaW50XCIsXG4gICAgICAgICAgXCJpc011dFwiOiB0cnVlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibWV0YWRhdGFcIixcbiAgICAgICAgICBcImlzTXV0XCI6IHRydWUsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibWFzdGVyRWRpdGlvblwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJhdXRoXCIsXG4gICAgICAgICAgXCJpc011dFwiOiB0cnVlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcInRva2VuQWNjb3VudFwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJ1c2VyXCIsXG4gICAgICAgICAgXCJpc011dFwiOiBmYWxzZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJwYXllclwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcInRva2VuUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYXNzb2NpYXRlZFRva2VuUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwicmVudFwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwic3lzdGVtUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwidG9rZW5NZXRhZGF0YVByb2dyYW1cIixcbiAgICAgICAgICBcImlzTXV0XCI6IGZhbHNlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogZmFsc2VcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFwiYXJnc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJ1cmlcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJzdHJpbmdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibmFtZVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcInN0cmluZ1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJzeW1ib2xcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJzdHJpbmdcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdXG59O1xuXG5leHBvcnQgY29uc3QgSURMOiBOZnQgPSB7XG4gIFwidmVyc2lvblwiOiBcIjAuMS4wXCIsXG4gIFwibmFtZVwiOiBcIm5mdFwiLFxuICBcImluc3RydWN0aW9uc1wiOiBbXG4gICAge1xuICAgICAgXCJuYW1lXCI6IFwiaW5pdGlhbGl6ZVwiLFxuICAgICAgXCJhY2NvdW50c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJtaW50XCIsXG4gICAgICAgICAgXCJpc011dFwiOiB0cnVlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibWV0YWRhdGFcIixcbiAgICAgICAgICBcImlzTXV0XCI6IHRydWUsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibWFzdGVyRWRpdGlvblwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJhdXRoXCIsXG4gICAgICAgICAgXCJpc011dFwiOiB0cnVlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcInRva2VuQWNjb3VudFwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJ1c2VyXCIsXG4gICAgICAgICAgXCJpc011dFwiOiBmYWxzZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJwYXllclwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogdHJ1ZSxcbiAgICAgICAgICBcImlzU2lnbmVyXCI6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcInRva2VuUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYXNzb2NpYXRlZFRva2VuUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwicmVudFwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwic3lzdGVtUHJvZ3JhbVwiLFxuICAgICAgICAgIFwiaXNNdXRcIjogZmFsc2UsXG4gICAgICAgICAgXCJpc1NpZ25lclwiOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwidG9rZW5NZXRhZGF0YVByb2dyYW1cIixcbiAgICAgICAgICBcImlzTXV0XCI6IGZhbHNlLFxuICAgICAgICAgIFwiaXNTaWduZXJcIjogZmFsc2VcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFwiYXJnc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJ1cmlcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJzdHJpbmdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwibmFtZVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcInN0cmluZ1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJzeW1ib2xcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJzdHJpbmdcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdXG59O1xuIl0sIm5hbWVzIjpbIklETCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./idl/program_idl.ts\n");

/***/ }),

/***/ "(api)/./pages/api/checkout.ts":
/*!*******************************!*\
  !*** ./pages/api/checkout.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/spl-token */ \"@solana/spl-token\");\n/* harmony import */ var _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metaplex-foundation/js */ \"@metaplex-foundation/js\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @project-serum/anchor */ \"@project-serum/anchor\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _idl_program_idl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../idl/program_idl */ \"(api)/./idl/program_idl.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__, _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__, _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n// setup\nconst MockWallet = {\n    signTransaction: ()=>Promise.reject()\n    ,\n    signAllTransactions: ()=>Promise.reject()\n    ,\n    publicKey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate().publicKey\n};\nconst connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection((0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.clusterApiUrl)(\"devnet\"));\nconst provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__.AnchorProvider(connection, MockWallet, {});\n(0,_project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__.setProvider)(provider);\n// Anchor Program setup\nconst programId = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"5aia16UteFJBDNNW3RBqtxRqVKULCBKgppjPafEvTzG1\");\nconst program = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__.Program(_idl_program_idl__WEBPACK_IMPORTED_MODULE_4__.IDL, programId);\n// metaplex token metadata program\nconst TOKEN_METADATA_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\");\n// nft test data\nconst nft = {\n    uri: \"https://arweave.net/bj7vXx6-AmFV0lk0QlCOGk1O9aCDoJAqefg55107rT4\",\n    name: \"Test\",\n    symbol: \"Test\"\n};\nfunction get(res) {\n    res.status(200).json({\n        label: \"My Store\",\n        icon: \"https://solana.com/src/img/branding/solanaLogoMark.svg\"\n    });\n}\nasync function postImpl(account) {\n    // Metaplex setup\n    const metaplex = _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__.Metaplex.make(connection).nfts().pdas();\n    // Create new mint for NFT\n    const mintKeypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate();\n    // Master edition PDA for mint\n    const masterEditionPda = metaplex.masterEdition({\n        mint: mintKeypair.publicKey\n    });\n    // Token metadata PDA for mint\n    const metadataPda = metaplex.metadata({\n        mint: mintKeypair.publicKey\n    });\n    // Anchor program mint authority PDA\n    const [auth] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddress([\n        Buffer.from(\"auth\")\n    ], program.programId);\n    // token account address for user minting NFT\n    const tokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.getAssociatedTokenAddress)(mintKeypair.publicKey, account);\n    const instruction = await program.methods.initialize(nft.uri, nft.name, nft.symbol).accounts({\n        mint: mintKeypair.publicKey,\n        metadata: metadataPda,\n        masterEdition: masterEditionPda,\n        auth: auth,\n        tokenAccount: tokenAccount,\n        user: account,\n        payer: account,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID\n    })// .signers([mintKeypair])\n    .instruction();\n    // Convert to transaction\n    const latestBlockhash = await connection.getLatestBlockhash();\n    // const transaction = await transactionBuilder.toTransaction(latestBlockhash)\n    // create new Transaction\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction({\n        recentBlockhash: latestBlockhash.blockhash,\n        feePayer: account\n    });\n    // add instruction to transaction\n    transaction.add(instruction);\n    // add new mintKeypair as signer\n    transaction.sign(mintKeypair);\n    // Serialize the transaction and convert to base64 to return it\n    const serializedTransaction = transaction.serialize({\n        requireAllSignatures: false\n    });\n    const base64 = serializedTransaction.toString(\"base64\");\n    const message = \"Please approve the transaction to mint your NFT!\";\n    // Return the serialized transaction\n    return {\n        transaction: base64,\n        message\n    };\n}\nasync function post(req, res) {\n    const { account  } = req.body;\n    console.log(req.body);\n    if (!account) {\n        res.status(400).json({\n            error: \"No account provided\"\n        });\n        return;\n    }\n    try {\n        const mintOutputData = await postImpl(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(account));\n        res.status(200).json(mintOutputData);\n        return;\n    } catch (error) {\n        console.error(error);\n        res.status(500).json({\n            error: \"error creating transaction\"\n        });\n        return;\n    }\n}\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        return get(res);\n    } else if (req.method === \"POST\") {\n        return await post(req, res);\n    } else {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/checkout.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/checkout.ts"));
module.exports = __webpack_exports__;

})();